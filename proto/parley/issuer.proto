syntax = "proto3";

package parley.v1;

import "common.proto";

// === Issuance service API ===
// Minimal, privacy-preserving issuance where the wallet sends a DOB commitment C and
// the issuer returns a RedJubjub-signed credential message. No legacy fields.

// Wallet -> Issuer: request to issue an age credential.
message IssueCredentialRequest {
  // The 32-byte Pedersen commitment to DOB: C = Pedersen(dob_days, r)
  bytes  commitment = 1;
  // Requested schema tag, usually "dob-v1".
  string schema     = 2;
  // Optional: the issuer key id (kid) to target; if empty, issuer selects policy/default kid.
  string kid        = 3;
}

// Issuer -> Wallet: signed credential blob.
message IssueCredentialResponse {
  SignedCredential credential = 1;
}

// Optional: static JWKS entry shape (for discovery mirroring) if you publish via gRPC as well.
message RjJwk {
  string kid       = 1; // key id
  bytes  rj_vk     = 2; // 32-byte RedJubjub verification key
  string alg       = 3; // e.g., "RedJubjub"
  string use       = 4; // e.g., "sig"
  uint64 not_after = 5; // optional policy timestamp (seconds)
}

message Jwks {
  repeated RjJwk keys = 1;
}